//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.11 at 12:08:08 PM EDT 
//


package annotationSchema.jaxb;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import states.IState;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}character" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="alter_name" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="constraint" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="constraintid" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="geographical_constraint" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="id" use="required" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="in_bracket" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="in_brackets" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="parallelism_constraint" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="taxon_constraint" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *       &lt;attribute name="ontologyid" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="provenance" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="notes" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "character",
    "text"
})
@XmlRootElement(name = "structure")
public class Structure {

    
    protected List<Character> character;
    protected String text;
    @XmlAttribute(name = "alter_name")
    @XmlSchemaType(name = "anySimpleType")
    protected String alterName;
    @XmlAttribute(name = "constraint")
    @XmlSchemaType(name = "anySimpleType")
    protected String constraint;
    @XmlAttribute(name = "constraintid")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String constraintid;
    @XmlAttribute(name = "geographical_constraint")
    @XmlSchemaType(name = "anySimpleType")
    protected String geographicalConstraint;
    @XmlAttribute(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAttribute(name = "in_bracket")
    protected Boolean inBracket;
    @XmlAttribute(name = "in_brackets")
    protected Boolean inBrackets;
    @XmlAttribute(required = true)
    protected String name;
    @XmlAttribute(name = "parallelism_constraint")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String parallelismConstraint;
    @XmlAttribute(name = "taxon_constraint")
    @XmlSchemaType(name = "anySimpleType")
    protected String taxonConstraint;
    @XmlAttribute(name = "ontologyid")
    protected String ontologyid;
    @XmlAttribute(name = "provenance")
    protected String provenance;
    @XmlAttribute(name = "notes")
    protected String notes;
    
    @XmlAttribute(name = "constraint_type")
    protected String constraintType;
    @XmlAttribute(name = "constraint_parent_organ")
    protected String constraintParentOrgan;
    
    @SuppressWarnings("rawtypes")
    @XmlTransient
	protected Map<String, List<IState>> stateMap;
    @XmlTransient
    protected Map<String, String> modifierMap;
    @XmlTransient
    protected String statementId;

    /**
     * Gets the value of the character property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the character property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCharacter().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Character }
     * 
     * 
     */
    public List<Character> getCharacter() {
        if (character == null) {
            character = new ArrayList<Character>();
        }
        return this.character;
    }

    /**
     * Gets the value of the text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getText() {
        return text;
    }

    /**
     * Sets the value of the text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setText(String value) {
        this.text = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    
    /**
     * Gets the value of the alterName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAlterName() {
        return alterName;
    }

    /**
     * Sets the value of the alterName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAlterName(String value) {
        this.alterName = value;
    }


    /**
     * Gets the value of the constraint property.
     * 
     * @return
     *     possible object is
     *     {@link String }    
     */
    public String getConstraint() {
        return constraint;
    }
    /**
     * Sets the value of the constraint property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConstraint(String value) {
        this.constraint = value;
    }
    
    /**
     * Gets the value of the constraintid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConstraintid() {
        return constraintid;
    }

    /**
     * Sets the value of the constraintid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConstraintid(String value) {
        this.constraintid = value;
    }

    /**
     * Gets the value of the geographicalConstraint property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeographicalConstraint() {
        return geographicalConstraint;
    }

    /**
     * Sets the value of the geographicalConstraint property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeographicalConstraint(String value) {
        this.geographicalConstraint = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the inBracket property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isInBracket() {
        return inBracket;
    }

    /**
     * Sets the value of the inBracket property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setInBracket(Boolean value) {
        this.inBracket = value;
    }

    /**
     * Gets the value of the inBrackets property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isInBrackets() {
        return inBrackets;
    }

    /**
     * Sets the value of the inBrackets property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setInBrackets(Boolean value) {
        this.inBrackets = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the parallelismConstraint property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getParallelismConstraint() {
        return parallelismConstraint;
    }

    /**
     * Sets the value of the parallelismConstraint property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setParallelismConstraint(String value) {
        this.parallelismConstraint = value;
    }

    /**
     * Gets the value of the taxonConstraint property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxonConstraint() {
        return taxonConstraint;
    }

    /**
     * Sets the value of the taxonConstraint property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxonConstraint(String value) {
        this.taxonConstraint = value;
    }

    /**
     * Gets the value of the ontologyid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOntologyid() {
        return ontologyid;
    }

    /**
     * Sets the value of the ontologyid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOntologyid(String value) {
        this.ontologyid = value;
    }

    /**
     * Gets the value of the provenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProvenance() {
        return provenance;
    }

    /**
     * Sets the value of the provenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProvenance(String value) {
        this.provenance = value;
    }

    /**
     * Gets the value of the notes property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotes() {
        return notes;
    }

    /**
     * Sets the value of the notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotes(String value) {
        this.notes = value;
    }
    
    
    /**
     * Gets the value of the constraintType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConstraintType() {
        return constraintType;
    }
    
    /**
     * Sets the value of the constraintType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConstraintType(String value) {
        this.constraintType = value;
    }

    /**
     * Gets the value of the constraintParentOrgan property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConstraintParentOrgan() {
        return constraintParentOrgan;
    }

    
    
    
	/**
	 * @return the stateMap
	 */
	@SuppressWarnings("rawtypes")
	public Map<String, List<IState>> getCharStateMap() {
		if(stateMap == null)
			stateMap = new TreeMap<String, List<IState>>();
		return stateMap;
	}
	
	/**
	 * Convenience method for adding a mapping to the stateMap.
	 * @param c Character name.
	 * @param s State.
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public void addMapping(String charName, IState state) {
		if(stateMap == null)
			stateMap = new TreeMap<String, List<IState>>();
		if(stateMap.get(charName) == null) {
			List<IState> stateList = new ArrayList<IState>();
			stateList.add(state);
			stateMap.put(charName, stateList);
		}
		else {
			List<IState> stateList = stateMap.get(charName);
			stateList.add(state);
			stateMap.put(charName, stateList);
		}
	}

	/**
	 * Return a map from character names to modifiers.
	 * @return the modifierMap
	 */
	public Map<String, String> getModifierMap() {
		if(modifierMap == null)
			modifierMap = new TreeMap<String, String>();
		return modifierMap;
	}
	
	/**
	 * Adds a new mapping from character name to modifier
	 * @param charName
	 * @param modifier
	 */
	public void addModifierToCharName(String charName, String modifier) {
		if(this.modifierMap == null)
			modifierMap = new TreeMap<String, String>();
		modifierMap.put(charName, modifier);
	}

	/**
	 * @return the statementId
	 */
	public String getStatementId() {
		return statementId;
	}

	/**
	 * @param statementId the statementId to set
	 */
	public void setStatementId(String statementId) {
		this.statementId = statementId;
	}


	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Structure [");
		if (alterName != null)
			builder.append(",alterName=").append(alterName);
		if (constraint != null)
			builder.append(",constraint=").append(constraint);
		if (constraintid != null)
			builder.append(",constraintid=").append(constraintid);
		if (geographicalConstraint != null)
			builder.append("geographicalConstraint=").append(geographicalConstraint);
		if (id != null)
			builder.append("id=").append(id);
		if (inBracket != null)
			builder.append("inBracket=").append(inBracket);
		if (inBrackets != null)
			builder.append("inBrackets=").append(inBrackets);
		if (name != null)
			builder.append("name=").append(name);
		if (parallelismConstraint != null)
			builder.append(",parallelismConstraint=").append(parallelismConstraint);
		if (taxonConstraint != null)
			builder.append(",taxonConstraint=").append(taxonConstraint);
		if (ontologyid != null)
			builder.append(",ontologyid=").append(ontologyid);
		if (provenance != null)
			builder.append(",provenance=").append(provenance);
		if(notes != null)
			builder.append(",notes=").append(notes);		
		builder.append("]");
		return builder.toString();

	}

}
